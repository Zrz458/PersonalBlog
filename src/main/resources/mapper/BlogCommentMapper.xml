<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zrz.zblog.dao.BlogCommentMapper">
    <resultMap id="BaseResultMap" type="BlogComment">
        <id column="comment_id" property="commentId"/>
        <result column="blog_id" property="blogId"/>
        <result column="commentator" property="commentator"/>
        <result column="email" property="email"/>
        <result column="website_url" property="websiteUrl"/>
        <result column="comment_body" property="commentBody"/>
        <result column="comment_create_time" property="commentCreateTime"/>
        <result column="commentator_ip" property="commentatorIp"/>
        <result column="reply_body" property="replyBody"/>
        <result column="reply_create_time" property="replyCreateTime"/>
        <result column="comment_status" property="commentStatus"/>
        <result column="is_deleted" property="isDeleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        comment_id
        ,
        blog_id,
        commentator,
        email,
        website_url,
        comment_body,
        comment_create_time,
        commentator_ip,
        reply_body,
        reply_create_time,
        comment_status,
        is_deleted
    </sql>
    <select id="findBlogCommentList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_comment
        where is_deleted=0
        <if test="blogId!=null">
            AND blog_id = #{blogId}
        </if>
        <if test="commentStatus!=null">
            AND comment_status = #{commentStatus}
        </if>
        order by comment_id desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="getTotalBlogComments" parameterType="Map" resultType="int">
        select count(*) from blog_comment
        where is_deleted=0
        <if test="blogId!=null">
            AND blog_id = #{blogId}
        </if>
        <if test="commentStatus!=null">
            AND comment_status = #{commentStatus}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_comment
        where comment_id = #{commentId,jdbcType=BIGINT} and is_deleted=0
    </select>

    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
        update blog_comment
        set is_deleted=1
        where comment_id = #{commentId,jdbcType=BIGINT}
          and is_deleted = 0
    </update>

    <update id="checkDone">
        update blog_comment
        set comment_status=1 where comment_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
        and comment_status = 0
    </update>

    <update id="deleteBatch">
        update blog_comment
        set is_deleted=1 where comment_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <insert id="insert" parameterType="BlogComment">
        insert into blog_comment (comment_id, blog_id, commentator,
                                  email, website_url, comment_body,
                                  comment_create_time, commentator_ip, reply_body,
                                  reply_create_time, comment_status, is_deleted)
        values (#{commentId}, #{blogId}, #{commentator},
                #{email}, #{websiteUrl}, #{commentBody},
                #{commentCreateTime}, #{commentatorIp}, #{replyBody},
                #{replyCreateTime}, #{commentStatus,}, #{isDeleted})
    </insert>
    <insert id="insertSelective" parameterType="BlogComment">
        insert into blog_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="commentator != null">
                commentator,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="websiteUrl != null">
                website_url,
            </if>
            <if test="commentBody != null">
                comment_body,
            </if>
            <if test="commentCreateTime != null">
                comment_create_time,
            </if>
            <if test="commentatorIp != null">
                commentator_ip,
            </if>
            <if test="replyBody != null">
                reply_body,
            </if>
            <if test="replyCreateTime != null">
                reply_create_time,
            </if>
            <if test="commentStatus != null">
                comment_status,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId},
            </if>
            <if test="blogId != null">
                #{blogId},
            </if>
            <if test="commentator != null">
                #{commentator},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="websiteUrl != null">
                #{websiteUrl},
            </if>
            <if test="commentBody != null">
                #{commentBody},
            </if>
            <if test="commentCreateTime != null">
                #{commentCreateTime},
            </if>
            <if test="commentatorIp != null">
                #{commentatorIp},
            </if>
            <if test="replyBody != null">
                #{replyBody},
            </if>
            <if test="replyCreateTime != null">
                #{replyCreateTime},
            </if>
            <if test="commentStatus != null">
                #{commentStatus},
            </if>
            <if test="isDeleted != null">
                #{isDeleted},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="BlogComment">
        update blog_comment
        <set>
            <if test="blogId != null">
                blog_id = #{blogId},
            </if>
            <if test="commentator != null">
                commentator = #{commentator},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="websiteUrl != null">
                website_url = #{websiteUrl},
            </if>
            <if test="commentBody != null">
                comment_body = #{commentBody},
            </if>
            <if test="commentCreateTime != null">
                comment_create_time = #{commentCreateTime},
            </if>
            <if test="commentatorIp != null">
                commentator_ip = #{commentatorIp},
            </if>
            <if test="replyBody != null">
                reply_body = #{replyBody},
            </if>
            <if test="replyCreateTime != null">
                reply_create_time = #{replyCreateTime},
            </if>
            <if test="commentStatus != null">
                comment_status = #{commentStatus},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
        </set>
        where comment_id = #{commentId}
    </update>

    <update id="updateByPrimaryKey" parameterType="BlogComment">
        update tb_blog_comment
        set blog_id             = #{blogId},
            commentator         = #{commentator},
            email               = #{email},
            website_url         = #{websiteUrl},
            comment_body        = #{commentBody},
            comment_create_time = #{commentCreateTime},
            commentator_ip      = #{commentatorIp},
            reply_body          = #{replyBody},
            reply_create_time   = #{replyCreateTime},
            comment_status      = #{commentStatus},
            is_deleted          = #{isDeleted}
        where comment_id = #{commentId}
    </update>
</mapper>